name: "Build and deploy aivia"
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: "actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3" # ratchet:actions/checkout@v3
      - uses: "gradle/wrapper-validation-action@8d49e559aae34d3e0eb16cde532684bc9702762b" # ratchet:gradle/wrapper-validation-action@v1
      - uses: "actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8" # ratchet:actions/cache@v3
        with:
          "path": "~/.gradle/caches"
          "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
          "restore-keys": "${{ runner.os }}-gradle-"
      - uses: "actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2" # ratchet:actions/setup-java@v3
        with:
          "java-version": "17"
          "distribution": "zulu"
      - name: "compile and run tests"
        run: "./gradlew build"
      - uses: nais/platform-build-push-sign@main
        id: build-push-sign
        with:
          name: aivia
          google_service_account: gh-aivia
          push: ${{ github.actor != 'dependabot[bot]' && github.ref == 'refs/heads/main' }}
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
    outputs:
      image: "${{ steps.build-push-sign.outputs.tag }}"
  deploy:
    name: "deploy for testing"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: "actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3" # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@e1d100f14637a6caa0aec40f5b5c7fd0c3ce500e # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: src/test/resources/aiven-topics.yaml,src/test/resources/configmap.yaml,nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
