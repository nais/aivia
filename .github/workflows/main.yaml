name: "Build and deploy aivia"
on:
  push:
    branches:
    - "main"
env:
  "BASEIMAGE": "ghcr.io/${{ github.repository }}"
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v2"
    - uses: "gradle/wrapper-validation-action@v1"
    - uses: "actions/cache@v2"
      with:
        "path": "~/.gradle/caches"
        "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
        "restore-keys": "${{ runner.os }}-gradle-"
    - uses: "actions/setup-java@v1"
      with:
        "java-version": "15"
    - name: "compile and run tests"
      run: "./gradlew build"
    - name: "Set image version"
      id: set-image-tag
      run: |
        export IMAGE="${BASEIMAGE}:$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
        echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
        echo "::set-output name=image::${IMAGE}"
    - name: "Build and publish Docker image"
      run: |
        docker build --pull --tag ${IMAGE} --tag ${BASEIMAGE}:latest .
        echo $GITHUB_TOKEN | docker login --username $GITHUB_REPOSITORY --password-stdin https://ghcr.io
        docker push ${IMAGE} ${BASEIMAGE}:latest"
      env:
        "GITHUB_TOKEN": "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      image: "${{ steps.set-image-tag.outputs.image }}"
  deploy:
    name: "deploy for testing"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: "actions/checkout@v2"
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: src/test/resources/aiven-topics.yaml,src/test/resources/configmap.yaml,nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
