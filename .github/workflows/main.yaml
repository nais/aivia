name: "Build and deploy aivia"
on:
  push:
    branches:
      - main
    paths-ignore:
      - "*.md"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  BASEIMAGE: "ghcr.io/${{ github.repository }}"
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: "actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f" # ratchet:actions/checkout@v3
      - uses: "gradle/wrapper-validation-action@8d49e559aae34d3e0eb16cde532684bc9702762b" # ratchet:gradle/wrapper-validation-action@v1
      - uses: "actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8" # ratchet:actions/cache@v3
        with:
          "path": "~/.gradle/caches"
          "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
          "restore-keys": "${{ runner.os }}-gradle-"
      - uses: "actions/setup-java@3f07048e3d294f56e9b90ac5ea2c6f74e9ad0f98" # ratchet:actions/setup-java@v3
        with:
          "java-version": "17"
          "distribution": "zulu"
      - name: "compile and run tests"
        run: "./gradlew build"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # ratchet:docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4b4e9c3e2d4531116a6f8ba8e71fc6e2cb6e6c8c # ratchet:docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # ratchet:docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        id: metadata
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # ratchet:docker/metadata-action@v4
        with:
          images: ${{ env.BASEIMAGE }}
          tags: |
            type=raw,value={{date 'YYYYMMDDhhmmss'}}-{{sha}}
            type=raw,value=latest
      - name: Build and push
        id: build-push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # ratchet:docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Install cosign
        uses: sigstore/cosign-installer@a153265ff8a7b904ebe7ffcc16bced18b58dfa3c # ratchet:sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.0'
      - name: Sign the container image
        run: cosign sign --yes ${{ env.BASEIMAGE }}@${{ steps.build-push.outputs.digest }}
      - name: Create SBOM
        run: ./gradlew cyclonedxBom
      - name: Attest image
        run: cosign attest --yes --predicate build/reports/bom.json --type cyclonedx ${{ env.BASEIMAGE }}@${{ steps.build-push.outputs.digest }}
    outputs:
      image: "${{ fromJSON(steps.metadata.outputs.json).tags[0] }}"
  deploy:
    name: "deploy for testing"
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: "actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f" # ratchet:actions/checkout@v3
      - uses: nais/deploy/actions/deploy@fff9ae049178e5d3dca5c9600cf78acce63c0708 # ratchet:nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: src/test/resources/aiven-topics.yaml,src/test/resources/configmap.yaml,nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
