name: "Build and deploy aivia"
on:
  push:
    branches:
    - "main"
env:
  BASEIMAGE: "ghcr.io/${{ github.repository }}"

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    steps:
    - uses: "actions/checkout@v3"
    - uses: "gradle/wrapper-validation-action@v1"
    - uses: "actions/cache@v3"
      with:
        "path": "~/.gradle/caches"
        "key": "${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}"
        "restore-keys": "${{ runner.os }}-gradle-"
    - uses: "actions/setup-java@v3"
      with:
        "java-version": "15"
        "distribution": "zulu"
    - name: "compile and run tests"
      run: "./gradlew build"
    - name: "Set image version"
      id: set-image-tag
      run: |
        # TODO: Replace with https://github.com/docker/metadata-action once
        # https://github.com/docker/metadata-action/issues/120 is resolved
        export IMAGE="${BASEIMAGE}:$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
        echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
        echo "image=${IMAGE}" >> ${GITHUB_OUTPUT}
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: ${{ env.BASEIMAGE }}:latest,${{ env.IMAGE }}
    outputs:
      image: "${{ steps.set-image-tag.outputs.image }}"
  deploy:
    name: "deploy for testing"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: "actions/checkout@v3"
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: src/test/resources/aiven-topics.yaml,src/test/resources/configmap.yaml,nais/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}
